name: Build Custom RustDesk

on:
  push:
    branches: [master]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  # 服务器配置
  RENDEZVOUS_SERVER: 47.100.22.91:21116
  RELAY_SERVER: 47.100.22.91:21117
  RS_PUB_KEY: ejHEEuKd761NA6Q82WMsnNBaKxYhXhMFs1qdUzrJEPY=

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-pc-windows-msvc

      - name: Configure custom server
        shell: pwsh
        run: |
          # 修改 src/common.rs
          $content = Get-Content "src\common.rs" -Raw
          $content = $content -replace 'rs-ny\.rustdesk\.com:21116', '47.100.22.91:21116'
          $content = $content -replace 'rs-ny\.rustdesk\.com:21117', '47.100.22.91:21117'
          $content = $content -replace 'rs-ny\.rustdesk\.com', '47.100.22.91'
          Set-Content -Path "src\common.rs" -Value $content

          # 创建自定义配置文件
          @"
          rendezvous_server = '47.100.22.91:21116'
          relay_server = '47.100.22.91:21117'
          api_server = ''
          key = 'ejHEEuKd761NA6Q82WMsnNBaKxYhXhMFs1qdUzrJEPY='
          "@ | Out-File -FilePath "src\custom_server.rs" -Encoding UTF8

          # 修改 src/ui_session_interface.rs 添加默认key
          $uiContent = Get-Content "src\ui_session_interface.rs" -Raw
          if ($uiContent -match 'get_key\(\)') {
            $uiContent = $uiContent -replace '(get_key\(\)\s*{[^}]*})', @'
                  get_key() {
                      let mut key = Config::get_option("key");
                      if key.is_empty() {
                          key = "ejHEEuKd761NA6Q82WMsnNBaKxYhXhMFs1qdUzrJEPY=".to_string();
                      }
                      key
                  }
                  '@
          }
          Set-Content -Path "src\ui_session_interface.rs" -Value $uiContent

      - name: Build RustDesk
        run: |
          python res/build.py --portable --hwcodec --gpucodec

      - name: Upload Windows portable
        uses: actions/upload-artifact@v3
        with:
          name: rustdesk-windows-portable
          path: |
            rustdesk-*.exe
            RustDesk-*.exe

  build-linux:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y \
            clang cmake curl g++ gcc git \
            libappindicator3-dev libasound2-dev libclang-dev \
            libglib2.0-dev libgtk-3-dev libpulse-dev libxcb-randr0-dev \
            libxcb-shape0-dev libxcb-xfixes0-dev libxdo-dev libxfixes-dev \
            nasm wget

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Configure custom server
        run: |
          # 修改服务器地址
          sed -i 's/rs-ny\.rustdesk\.com:21116/47.100.22.91:21116/g' src/common.rs
          sed -i 's/rs-ny\.rustdesk\.com:21117/47.100.22.91:21117/g' src/common.rs
          sed -i 's/rs-ny\.rustdesk\.com/47.100.22.91/g' src/common.rs

          # 创建配置文件
          cat > res/custom_config.toml << EOF
          rendezvous_server = '47.100.22.91:21116'
          relay_server = '47.100.22.91:21117'
          key = 'ejHEEuKd761NA6Q82WMsnNBaKxYhXhMFs1qdUzrJEPY='
          EOF

      - name: Build
        run: |
          cargo build --release --features=flatpak

      - name: Create AppImage
        run: |
          # 下载 AppImage 工具
          wget https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage
          chmod +x appimagetool-x86_64.AppImage

          # 创建 AppImage 目录结构
          mkdir -p AppDir/usr/bin
          mkdir -p AppDir/usr/share/applications
          mkdir -p AppDir/usr/share/icons/hicolor/256x256/apps

          cp target/release/rustdesk AppDir/usr/bin/
          cp res/rustdesk.desktop AppDir/usr/share/applications/
          cp res/128x128@2x.png AppDir/usr/share/icons/hicolor/256x256/apps/rustdesk.png

          # 生成 AppImage
          ./appimagetool-x86_64.AppImage AppDir RustDesk-Custom.AppImage

      - name: Upload Linux builds
        uses: actions/upload-artifact@v3
        with:
          name: rustdesk-linux
          path: |
            target/release/rustdesk
            RustDesk-Custom.AppImage

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-apple-darwin, aarch64-apple-darwin

      - name: Configure custom server
        run: |
          # 修改服务器配置
          sed -i '' 's/rs-ny\.rustdesk\.com:21116/47.100.22.91:21116/g' src/common.rs
          sed -i '' 's/rs-ny\.rustdesk\.com:21117/47.100.22.91:21117/g' src/common.rs
          sed -i '' 's/rs-ny\.rustdesk\.com/47.100.22.91/g' src/common.rs

          # 设置默认key
          echo 'pub const DEFAULT_KEY: &str = "ejHEEuKd761NA6Q82WMsnNBaKxYhXhMFs1qdUzrJEPY=";' >> src/common.rs

      - name: Build
        run: |
          cargo build --release --features=flatpak

      - name: Create DMG
        run: |
          # 创建 .app bundle
          mkdir -p RustDesk.app/Contents/MacOS
          mkdir -p RustDesk.app/Contents/Resources
          cp target/release/rustdesk RustDesk.app/Contents/MacOS/
          cp res/icon.icns RustDesk.app/Contents/Resources/

          # 创建 Info.plist
          cat > RustDesk.app/Contents/Info.plist << EOF
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
            <key>CFBundleExecutable</key>
            <string>rustdesk</string>
            <key>CFBundleIdentifier</key>
            <string>com.carriez.rustdesk</string>
            <key>CFBundleName</key>
            <string>RustDesk</string>
            <key>CFBundleIconFile</key>
            <string>icon</string>
            <key>CFBundleShortVersionString</key>
            <string>1.0</string>
          </dict>
          </plist>
          EOF

      - name: Upload macOS build
        uses: actions/upload-artifact@v3
        with:
          name: rustdesk-macos
          path: RustDesk.app

  create-release:
    needs: [build-windows, build-linux, build-macos]
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v3

      - name: Create Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            rustdesk-windows-portable/*
            rustdesk-linux/*
            rustdesk-macos/*
          tag_name: ${{ github.ref_name }}
          name: RustDesk Custom Build ${{ github.ref_name }}
          body: |
            自定义RustDesk客户端

            服务器配置：
            - Rendezvous: 47.100.22.91:21116
            - Relay: 47.100.22.91:21117
            - Key: 已内置
